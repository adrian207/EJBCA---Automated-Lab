## Loki Distributed Configuration
## Install with: helm install loki grafana/loki-distributed -f loki-values.yaml -n observability

fullnameOverride: loki

## Loki Image
loki:
  image:
    registry: docker.io
    repository: grafana/loki
    tag: 2.9.3
  
  ## Loki Configuration
  config: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      log_level: info
    
    common:
      path_prefix: /var/loki
      replication_factor: 3
      ring:
        kvstore:
          store: memberlist
    
    memberlist:
      join_members:
        - loki-memberlist
    
    schema_config:
      configs:
        - from: 2023-01-01
          store: boltdb-shipper
          object_store: azure
          schema: v11
          index:
            prefix: loki_index_
            period: 24h
    
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        shared_store: azure
      
      azure:
        container_name: loki-logs
        account_name: ${AZURE_STORAGE_ACCOUNT}
        account_key: ${AZURE_STORAGE_KEY}
        use_managed_identity: true
        request_timeout: 0
    
    compactor:
      working_directory: /var/loki/compactor
      shared_store: azure
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
    
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      retention_period: 744h  # 31 days
      ingestion_rate_mb: 50
      ingestion_burst_size_mb: 100
    
    chunk_store_config:
      max_look_back_period: 0s
    
    table_manager:
      retention_deletes_enabled: true
      retention_period: 744h
    
    query_range:
      align_queries_with_step: true
      max_retries: 5
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_bytes: 1GB
            validity: 24h
    
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
      max_outstanding_per_tenant: 2048
    
    query_scheduler:
      max_outstanding_requests_per_tenant: 2048
    
    ruler:
      enable_api: true
      enable_alertmanager_v2: true
      alertmanager_url: http://prometheus-alertmanager.observability:9093
      storage:
        type: local
        local:
          directory: /var/loki/rules
      rule_path: /tmp/rules
      ring:
        kvstore:
          store: memberlist

## Gateway (nginx)
gateway:
  enabled: true
  replicas: 2
  
  image:
    registry: docker.io
    repository: nginxinc/nginx-unprivileged
    tag: 1.25-alpine
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: loki.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-tls
        hosts:
          - loki.local

## Distributor
distributor:
  replicas: 3
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

## Ingester
ingester:
  replicas: 3
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: managed-premium
  
  resources:
    requests:
      cpu: 1000m
      memory: 4Gi
    limits:
      cpu: 2000m
      memory: 8Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

## Querier
querier:
  replicas: 3
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

## Query Frontend
queryFrontend:
  replicas: 2
  
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

## Query Scheduler
queryScheduler:
  replicas: 2
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

## Compactor
compactor:
  enabled: true
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: managed-premium
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

## Ruler
ruler:
  enabled: true
  replicas: 2
  
  persistence:
    enabled: true
    size: 10Gi
    storageClass: managed-premium
  
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

## Index Gateway
indexGateway:
  enabled: true
  replicas: 2
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: managed-premium
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

## Memcached
memcached:
  enabled: true

## Promtail (Log Shipper)
promtail:
  enabled: true
  
  config:
    clients:
      - url: http://loki-gateway/loki/api/v1/push
    
    positions:
      filename: /run/promtail/positions.yaml
    
    scrape_configs:
      # Kubernetes pods
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
          - json:
              expressions:
                output: log
                stream: stream
                timestamp: time
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - namespace
              - app
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
              - __meta_kubernetes_pod_container_name
            target_label: __path__

## Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s

