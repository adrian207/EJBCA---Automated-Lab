## Linkerd Viz Extension Configuration
## Install with: linkerd viz install --values linkerd-viz-values.yaml | kubectl apply -f -

## Dashboard Configuration
dashboard:
  replicas: 2
  resources:
    cpu:
      limit: "1"
      request: "100m"
    memory:
      limit: 250Mi
      request: 50Mi

## Metrics API
metricsAPI:
  replicas: 2
  resources:
    cpu:
      limit: "1"
      request: "100m"
    memory:
      limit: 250Mi
      request: 50Mi

## Prometheus
prometheus:
  enabled: true
  image:
    name: prom/prometheus
    version: v2.48.0
  
  replicas: 1
  
  resources:
    cpu:
      limit: "4"
      request: "300m"
    memory:
      limit: 8Gi
      request: 300Mi
  
  ## Persistence
  persistence:
    enabled: true
    storageClass: managed-premium
    size: 100Gi
  
  ## Retention
  retentionTime: 30d
  
  ## Global scrape interval
  globalConfig:
    scrape_interval: 10s
    scrape_timeout: 10s
    evaluation_interval: 10s
  
  ## Scrape Configs - integrate with kube-prometheus
  scrapeConfigs:
    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
        - role: pod
          namespaces:
            names: ['linkerd']
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
          action: keep
          regex: .+
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: admin-http
    
    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_container_name
          action: keep
          regex: linkerd-proxy
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod

## Tap
tap:
  replicas: 2
  resources:
    cpu:
      limit: "1"
      request: "100m"
    memory:
      limit: 250Mi
      request: 50Mi

## Tap Injector
tapInjector:
  replicas: 2
  resources:
    cpu:
      limit: "1"
      request: "100m"
    memory:
      limit: 250Mi
      request: 50Mi

## Web (Dashboard UI)
web:
  replicas: 2
  resources:
    cpu:
      limit: "1"
      request: "100m"
    memory:
      limit: 250Mi
      request: 50Mi

## Ingress for Dashboard
ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: linkerd-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Linkerd Dashboard"
  host: linkerd.local
  tls:
    - secretName: linkerd-tls
      hosts:
        - linkerd.local

